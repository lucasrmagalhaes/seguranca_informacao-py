import requests
from bs4 import BeautifulSoup
import operator
from collections import Counter

def start(url):
  wordlist = []

  source_code = requests.get(url).text
  
  soup = BeautifulSoup(source_code, "html.parser")

  for each_text in soup.find_all("div", {"class": "entry-content"}):
    words = each_text.text.lower().split()

    for each_word in words:
      wordlist.append(each_word)

    clean_wordlist(wordlist)

def clean_wordlist(wordlist):
  clean_list = []

  for word in wordlist:
    symbols = "!@#$%^&*()_-+={[}]|\/;?:\"<>,. "

    for i in range(0, len(symbols)):
      word = word.replace(symbols[i], "")

    if len(word) > 0:
      clean_list.append(word)

  create_dictionary(clean_list)

def create_dictionary(clean_list):
  word_count = {}
  
  for word in clean_list:
    if word in word_count:
      word_count[word] += 1
    else:
      word_count[word] = 1

  for key, value in sorted(word_count.items(), key = operator.itemgetter(1)):
    print(f"{key}: {value}")
    pass

  c = Counter(word_count)

  print(c.most_common(10))

if "__main__" == __name__:
  start("https://www.geeksforgeeks.org/python-programming-language/?ref=leftbar")

# languagelast: 1
# updated: 1
# 04: 1
# 2021python: 1
# generalpurpose: 1
# popular: 1
# latest: 1
# development: 1
# along: 1
# cutting: 1
# edge: 1
# technology: 1
# software: 1
# industry: 1
# well: 1
# beginners: 1
# also: 1
# experienced: 1
# javathis: 1
# specially: 1
# designed: 1
# efficient: 1
# way: 1
# topics: 1
# webscraping: 1
# deeplearning: 1
# examplesbelow: 1
# some: 1
# facts: 1
# about: 1
# currently: 1
# widely: 1
# multipurpose: 1
# allows: 1
# objectoriented: 1
# procedural: 1
# paradigmspython: 1
# programs: 1
# generally: 1
# smaller: 1
# than: 1
# have: 1
# relatively: 1
# less: 1
# requirement: 1
# makes: 1
# them: 1
# readable: 1
# timepython: 1
# almost: 1
# techgiant: 1
# dropbox: 1
# uber�: 1
# etcthe: 1
# biggest: 1
# strength: 1
# huge: 1
# collection: 1
# library: 1
# which: 1
# can: 1
# be: 1
# followingmachine: 1
# learninggui: 1
# kivy: 1
# pyqt: 1
# frameworks: 1
# youtube: 1
# dropboximage: 1
# opencv: 1
# pillowweb: 1
# scraping: 1
# scrapy: 1
# beautifulsoup: 1
# seleniumtest: 1
# frameworksmultimediascientific: 1
# computingtext: 1
# many: 1
# morerecent: 1
# articles: 1
# examplespython: 1
# inputoutput: 1
# types: 1
# flow: 1
# exception: 1
# collections: 1
# framework: 1
# numpy: 1
# modules: 1
# working: 1
# misc: 1
# projects: 1
# questionspython: 1
# �python: 1
# introductionpython: 1
# new: 1
# generation: 1
# languageimportant: 1
# 2x: 1
# 3x: 1
# examplekeywords: 1
# 1: 1
# 2namespaces: 1
# scope: 1
# pythonstatement: 1
# comment: 1
# pythonstructuring: 1
# programshow: 1
# check: 1
# if: 1
# valid: 1
# keyword: 1
# pythonhow: 1
# assign: 1
# values: 1
# languageshow: 1
# pythondecision: 1
# makingbasic: 1
# advantages: 1
# applicationsinputoutputtaking: 1
# console: 1
# inputs: 1
# user: 1
# methods: 1
# programmingvulnerability: 1
# 2xpython: 1
# functionhow: 1
# end: 1
# formattingdata: 1
# typesintroduction: 1
# datatypesstringslisttuplessetsdictionaryarraysvariablesvariables: 1
# condition: 1
# functionmaximum: 1
# value: 1
# integer: 1
# pythonglobal: 1
# local: 1
# pythonpacking: 1
# unpacking: 1
# arguments: 1
# pythontype: 1
# conversion: 1
# pythonbyte: 1
# objects: 1
# pythonprint: 1
# variableswap: 1
# variableprivate: 1
# variablesname: 1
# special: 1
# pythonoperatorsbasic: 1
# pythonlogical: 1
# bitwise: 1
# booleanternary: 1
# operatordivision: 1
# overloading: 1
# pythonany: 1
# pythoninplace: 1
# 1inplace: 1
# 1logic: 1
# gates: 1
# b: 1
# always: 1
# bdifference: 1
# membership: 1
# identity: 1
# notcontrol: 1
# flowloopsloops: 1
# statements: 1
# continue: 1
# break: 1
# pythonlooping: 1
# pythonrange: 1
# xrange: 1
# pythonprograms: 1
# printing: 1
# pyramid: 1
# pythonchaining: 1
# comparison: 1
# pythonelse: 1
# forswitch: 1
# functionusing: 1
# iteration: 1
# effectivelypython: 1
# itertoolspython: 1
# iter: 1
# next: 1
# converting: 1
# into: 1
# iteratorpython: 1
# iterable: 1
# iteratorgenerators: 1
# pythongenerators: 1
# pythonfunctionsfunctions: 1
# pythonwrite: 1
# empty: 1
# statementyield: 1
# instead: 1
# returnreturn: 1
# valuespartial: 1
# pythonprecision: 1
# handlingargs: 1
# kwargspython: 1
# closuresfunction: 1
# decoratorsdecorators: 1
# pythondecorators: 1
# parameters: 1
# pythonmemoization: 1
# decorators: 1
# pythonhelp: 1
# functionpython: 1
# range: 1
# does: 1
# return: 1
# iteratorcoroutine: 1
# bit: 1
# int: 1
# bitlength: 1
# tobytes: 1
# frombytesobject: 1
# conceptspython3: 1
# intermediate: 1
# topicsclass: 1
# membersdata: 1
# hiding: 1
# printinginheritance: 1
# examples: 1
# issubclass: 1
# superpolymorphism: 1
# pythonchanging: 1
# membersconstructors: 1
# pythondestructors: 1
# functionmetaprogramming: 1
# metaclassesclass: 1
# instance: 1
# attributereflectiongarbage: 1
# collectionexception: 1
# handlingexception: 1
# handlinguser: 1
# defined: 1
# exceptionbuiltin: 1
# exceptionclean: 1
# up: 1
# actionnzec: 1
# errortry: 1
# except: 1
# collectionscountersordereddictdefaultdictchainmapnamedtupledequeheapcollectionsuserdictcollectionsuserlistcollectionsuserstringdjango: 1
# frameworkdjango: 1
# basicsdjango: 1
# introduction: 1
# installationdjango: 1
# formsviews: 1
# modelsdjango: 1
# templatestodo: 1
# webapp: 1
# appweather: 1
# app: 1
# djangodata: 1
# analysisdata: 1
# bokehexploratory: 1
# different: 1
# charts: 1
# 2math: 1
# operations: 1
# analysisgetting: 1
# started: 1
# jupyter: 1
# notebook: 1
# pythonnumpypython: 1
# ndarraynumpy: 1
# array: 1
# creationnumpy: 1
# objectsdata: 1
# dtype: 1
# slicing: 1
# iterating: 1
# arraynumpy: 1
# binary: 1
# operationsnumpy: 1
# algebranumpy: 1
# sorting: 1
# searching: 1
# countingpandaspandas: 1
# dataframecreating: 1
# dataframedealing: 1
# dataframeindexing: 1
# selecting: 1
# pandasboolean: 1
# indexing: 1
# pandasconversion: 1
# dataframeiterating: 1
# dataframeworking: 1
# missing: 1
# pandaspython: 1
# seriesdata: 1
# pandasread: 1
# csv: 1
# pandasreadcsvmachine: 1
# pythonmachine: 1
# tutoriallinear: 1
# regressionunderstanding: 1
# regressionk: 1
# means: 1
# clusteringpython: 1
# image: 1
# kerascreating: 1
# simple: 1
# modelpython: 1
# systemml: 1
# boston: 1
# housing: 1
# kaggle: 1
# challenge: 1
# regressioncancer: 1
# cell: 1
# scikitlearnsaving: 1
# modelapplying: 1
# convolutional: 1
# mnist: 1
# datasetpython: 1
# nlp: 1
# restaurant: 1
# reviewslearning: 1
# model: 1
# building: 1
# scikitlearnimplementing: 1
# artificial: 1
# training: 1
# processa: 1
# neuron: 1
# how: 1
# apply: 1
# feature: 1
# scalingidentifying: 1
# handwritten: 1
# digits: 1
# regression: 1
# pytorchpython: 1
# guitkinter: 1
# tutorialkivy: 1
# registration: 1
# form: 1
# tkintercreate: 1
# stopwatch: 1
# pythondesigning: 1
# pyqtcolor: 1
# game: 1
# pythonmake: 1
# notepad: 1
# tkintermessage: 1
# encodedecode: 1
# tkinterreal: 1
# time: 1
# currency: 1
# convertor: 1
# tkintermodules: 1
# pythonintroduction: 1
# modulesos: 1
# modulecalendar: 1
# modulepython: 1
# urllib: 1
# modulepprinttimit: 1
# functionimport: 1
# moduleworking: 1
# databasemongodb: 1
# pythonsql: 1
# 1sql: 1
# sqlite: 1
# 2sql: 1
# large: 1
# datainserting: 1
# table: 1
# pythonmysqldb: 1
# pythondatabase: 1
# management: 1
# postgresqloracle: 1
# pythonmisc10: 1
# essential: 1
# tricks: 1
# programmersamazing: 1
# hacks: 1
# pythoninput: 1
# comptetive: 1
# programmingoptimization: 1
# codewhy: 1
# star: 1
# bad: 1
# ideawhy: 1
# best: 1
# codingpython: 1
# trics: 1
# codingapplications: 1
# projectspython: 1
# crawl: 1
# page: 1
# frequent: 1
# wordsfacebook: 1
# login: 1
# pythonfb: 1
# chatting: 1
# through: 1
# pythoncc: 1
# formating: 1
# toolfind: 1
# running: 1
# status: 1
# pnr: 1
# train: 1
# railway: 1
# text: 1
# wikipedia�s: 1
# infobox: 1
# pythonget: 1
# emotions: 1
# images: 1
# emotion: 1
# api: 1
# pythonwebsite: 1
# blockersend: 1
# sms: 1
# updates: 1
# mobile: 1
# phone: 1
# desktop: 1
# notifier: 1
# 20: 1
# linesmorse: 1
# translator: 1
# pythonperforming: 1
# search: 1
# codereading: 1
# generating: 1
# qr: 1
# codebirthday: 1
# reminder: 1
# application: 1
# pythonprogram: 1
# display: 1
# astrological: 1
# zodiac: 1
# given: 1
# date: 1
# birthtrack: 1
# bird: 1
# migrationnews: 1
# notifierwhatsapp: 1
# automating: 1
# happy: 1
# birthday: 1
# post: 1
# seleniumdesign: 1
# keylogger: 1
# systemrecommended: 1
# tutorialspython: 1
# tutorialmachine: 1
# tutorialpandas: 1
# tutorialopencv: 1
# tutorialselenium: 1
# tutorialgeeksforgeeks: 1
# courses1: 1
# scratch: 1
# understand: 1
# its: 1
# fundamentals: 1
# strong: 1
# easiest: 1
# manner: 1
# foundation2: 1
# liveget: 1
# interviewcentric: 1
# online: 1
# structure: 1
# geographical: 1
# location: 1
# enhancing: 1
# problemsolving: 1
# skills: 1
# crack: 1
# session3: 1
# preparationget: 1
# fulfilled: 1
# needs: 1
# place: 1
# provides: 1
# required: 1
# stuff: 1
# servicebased: 1
# startup: 1
# affordable: 1
# prices4: 1
# self: 1
# pacedstart: 1
# structures: 1
# interviews: 1
# it: 1
# giants: 1
# adobe: 1
# selfpaced: 1
# too: 1
# own: 1
# pace: 1
# convenience5: 1
# tcs: 1
# wiprocrack: 1
# giant: 1
# specifically: 1
# preparing: 1
# these: 1
# usually: 1
# ask: 1
# their: 1
# coding: 1
# round: 1
# refer: 1
# sde: 1
# test: 1
# series: 1
# etcmy: 1
# personal: 1
# notes: 1
# arrowdropupsave: 1
# sep: 2
# highlevel: 2
# very: 2
# being: 2
# suited: 2
# programmers: 2
# languages: 2
# tutorial: 2
# will: 2
# help: 2
# basics: 2
# are: 2
# languagepython: 2
# indentation: 2
# companies: 2
# google: 2
# facebook: 2
# instagram: 2
# standard: 2
# processing: 2
# choice: 2
# questions: 2
# control: 2
# oriented: 2
# handling: 2
# basicspython: 2
# difference: 2
# string: 2
# without: 2
# newline: 2
# calculator: 2
# program: 2
# pythontaking: 2
# parameter: 2
# printpython: 2
# expression: 2
# possible: 2
# variable: 2
# pythonoperator: 2
# pass: 2
# technique: 2
# pythonfirst: 2
# import: 2
# level: 2
# tutorialdjango: 2
# djangodjango: 2
# numpynumpy: 2
# indexingnumpy: 2
# basic: 2
# over: 2
# linear: 2
# rows: 2
# columns: 2
# logistic: 2
# classification: 2
# implementation: 2
# movie: 2
# recommender: 2
# where: 2
# tkintersimple: 2
# connection: 2
# tips: 2
# get: 2
# code: 2
# apifetching: 2
# top: 2
# sign: 2
# or: 2
# geeksforgeeks: 2
# geeks: 2
# algorithms: 2
# master: 2
# complete: 2
# preparation: 2
# course: 2
# prepare: 2
# specific: 2
# 3: 3
# web: 3
# other: 3
# c: 3
# you: 3
# advanced: 3
# django: 3
# etc: 3
# java: 3
# type: 3
# by: 3
# tkinter: 3
# output: 3
# operators: 3
# concepts: 3
# database: 3
# between: 3
# print: 3
# competitive: 3
# vs: 3
# single: 3
# pythonclass: 3
# static: 3
# class: 3
# pythondata: 3
# tutorialpython: 3
# neural: 3
# network: 3
# live: 3
# microsoft: 3
# classes: 3
# your: 3
# productbased: 3
# at: 3
# that: 3
# machine: 4
# applications: 4
# learn: 4
# most: 4
# amazon: 4
# variables: 4
# gui: 4
# input: 4
# function: 4
# not: 4
# news: 4
# visualization: 4
# courses: 4
# dsa: 4
# used: 5
# multiple: 5
# functions: 5
# an: 5
# operator: 5
# method: 5
# foundation: 5
# company: 5
# object: 6
# analysis: 6
# any: 6
# interview: 6
# all: 7
# from: 7
# on: 7
# pandas: 7
# learning: 8
# �: 8
# set: 8
# like: 9
# data: 9
# language: 11
# pythonpython: 12
# is: 13
# programming: 14
# the: 14
# for: 16
# a: 17
# of: 18
# to: 19
# with: 24
# using: 31
# python: 37
# and: 55
# in: 83

# [('in', 83), ('and', 55), ('python', 37), ('using', 31), ('with', 24), ('to', 19), ('of', 18), ('a', 17), ('for', 16), ('programming', 14)]